name: Sync GitHub Comments to Jira

on:
  issue_comment:
    types:
      - created
      - edited

jobs:
  sync-comment:
    runs-on: ubuntu-latest
    steps:
      # Debug GitHub Event Details
      - name: Debug GitHub Event
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Event Action: ${{ github.event.action }}"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Comment Body: ${{ github.event.comment.body }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          COMMENT_BODY: ${{ github.event.comment.body }}

      # Extract Issue Details
      - name: Set Issue Details as Environment Variables
        run: |
          echo "Setting ISSUE_TITLE and COMMENT_BODY to environment..."
          echo "ISSUE_TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
          echo "COMMENT_BODY=${{ github.event.comment.body }}" >> $GITHUB_ENV

      # Find Associated Jira Issue by Title
      - name: Find Jira Issue by Title
        id: find_jira
        env:
          JIRA_URL: ${{ vars.JIRA_URL }}
          JIRA_USERNAME: ${{ vars.JIRA_USERNAME }}
          JIRA_API_TOKEN: ${{ vars.JIRA_API_TOKEN }}
          ISSUE_TITLE: ${{ env.ISSUE_TITLE }}
          JIRA_PROJECT_KEY: ${{ vars.JIRA_PROJECT_KEY }}
        run: |
          echo "ISSUE_TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
          echo "COMMENT_BODY=${{ github.event.comment.body }}" >> $GITHUB_ENV
          # Escape ISSUE_TITLE
          ESCAPED_TITLE=$(echo "$ISSUE_TITLE" | sed 's/"/\\"/g') >> $GITHUB_ENV
          export  ESCAPED_TITLE=$(echo "$ISSUE_TITLE" | sed 's/"/\\"/g')
          # Debug Variables
          echo "Debugging Environment Variables:"
          echo "ISSUE_TITLE: $ISSUE_TITLE"
          echo "JIRA_URL: $JIRA_URL"
          echo "JIRA_USERNAME: $JIRA_USERNAME"
          echo "JIRA_API_TOKEN: $JIRA_API_TOKEN"
          echo "JIRA_PROJECT_KEY: $JIRA_PROJECT_KEY"
          echo "ESCAPED_TITLE: $ESCAPED_TITLE"

          # Search Jira issue by title
          #RESPONSE=$(curl -s -v -u "$JIRA_USERNAME:$JIRA_API_TOKEN" --get --data-urlencode "jql=project=$JIRA_PROJECT_KEY AND summary~\"$ESCAPED_TITLE\"" $JIRA_URL/rest/api/3/search)  
          RESPONSE=$(curl -s -u "$JIRA_USERNAME:$JIRA_API_TOKEN" --get --data-urlencode "jql=project=$JIRA_PROJECT_KEY AND summary~\"$ESCAPED_TITLE\"" $JIRA_URL/rest/api/3/search)
          echo "Jira Search Response: $RESPONSE"

          # Extract Jira Issue Key
          JIRA_ISSUE_KEY=$(echo "$RESPONSE" | jq -r '.issues[] | .key') 
            # Validate JIRA_ISSUE_KEY
          if [ -z "$JIRA_ISSUE_KEY" ] || [ "$JIRA_ISSUE_KEY" == "null" ]; then
            echo "Jira issue not found for GitHub issue title: $ISSUE_TITLE"
            exit 0
          fi

          echo "Found Jira Issue Key: $JIRA_ISSUE_KEY"
          echo "JIRA_ISSUE_KEY=$JIRA_ISSUE_KEY" >> $GITHUB_ENV

      # Add Comment to Jira
      - name: Add Comment to Jira Issue
        if: success() && env.JIRA_ISSUE_KEY != ''
        env:
          JIRA_URL: ${{ vars.JIRA_URL }}
          JIRA_USERNAME: ${{ vars.JIRA_USERNAME }}
          JIRA_API_TOKEN: ${{ vars.JIRA_API_TOKEN }}
          JIRA_ISSUE_KEY: ${{ env.JIRA_ISSUE_KEY }}
          COMMENT_BODY: ${{ env.COMMENT_BODY }}
        run: |
          echo "ISSUE_TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
          echo "COMMENT_BODY=${{ github.event.comment.body }}" >> $GITHUB_ENV
          echo "Adding comment to Jira Issue Key: $JIRA_ISSUE_KEY"
          export JIRA_USERNAME=$JIRA_USERNAME
          export JIRA_API_TOKEN=$JIRA_API_TOKEN
          export JIRA_ISSUE_KEY=$JIRA_ISSUE_KEY
          export COMMENT_BODY="$COMMENT_BODY"
          export JIRA_URL=$JIRA_URL
          RESPONSE=$(curl -s -X POST \
            -u "$JIRA_USERNAME:$JIRA_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "body": {
                "type": "doc",
                "version": 1,
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "'"$COMMENT_BODY"'"
                      }
                    ]
                  }
                ]
              }
            }' \
            "$JIRA_URL/rest/api/3/issue/$JIRA_ISSUE_KEY/comment")

          echo "Jira Comment Response: $RESPONSE"


      - name: Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v2
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_ACTION: ${{ github.event.action }}
          JIRA_PROJECT_KEY: ${{ vars.JIRA_PROJECT_KEY }}
          JIRA_USERNAME: ${{ vars.JIRA_USERNAME }}
          JIRA_URL: ${{ vars.JIRA_URL }}
          JIRA_ISSUE_KEY: ${{ env.JIRA_ISSUE_KEY }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          COMMENT_BODY: ${{ github.event.comment.body }}
        with:
      # mail server settings
          server_address: smtp.gmail.com
          server_port: 465
    # user credentials
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
    # email subject
          subject: A new ${{ github.event_name }} is created for ${{ github.repository }} for job ${{ github.job }} and pipeline is ${{ job.status }}
    # email body as text
    #body: ${{ github.job }} job in worflow ${{ github.workflow }} for ${{ github.repository }} has created new jira
          body: |
           <html>
            <body>
               <h2>GitHub Event Notification</h2>
               <p><strong>Event Type:</strong> ${{ github.event_name }}</p>
               <p><strong>Action:</strong> ${{ github.event.action }}</p>
               <p><strong>Repository:</strong> ${{ github.repository }}</p>
               <p><strong>Issue Title:</strong> ${{ github.event.issue.title }}</p>
               <p><strong>Comment added to Issue :</strong> ${{ github.event.comment.body }}</p>
               <p><strong>Issue Link:</strong> <a href="${{ vars.JIRA_URL }}/browse/${{ env.JIRA_ISSUE_KEY }}">${{ vars.JIRA_URL }}/browse/${{ env.JIRA_ISSUE_KEY }}</a></p>
            </body>
           </html>
    # comma-separated string, send email to
          to: ${{ secrets.EMAIL_TO }}
    # from email name
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/html
