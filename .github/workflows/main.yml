name: Jira-Github Integration and Notification

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
  issues:
    types:
      - opened
      - edited
  issue_comment:
    types:
      - created
      - edited

jobs:
  create_jira_ticket_github_prs:
    runs-on: ubuntu-latest

    steps:
      - name: Use variables
        run: |
          echo "Event Name: $GITHUB_EVENT_NAME"
          echo "Event Action: $GITHUB_EVENT_ACTION"
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_ACTION: ${{ github.event.action }}
          JIRA_API_TOKEN: ${{ vars.JIRA_API_TOKEN }}
          JIRA_PROJECT_KEY: ${{ vars.JIRA_PROJECT_KEY }}
          JIRA_USERNAME: ${{ vars.JIRA_USERNAME }}
          JIRA_URL: ${{ vars.JIRA_URL }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Handle Events
        id: handle_events
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            EVENT_TYPE="pull_request"
            DESCRIPTION="${{ github.event.pull_request.body }}"
            SUMMARY="${{ github.event.pull_request.title }}"
          elif [ "${GITHUB_EVENT_NAME}" = "issues" ]; then
            EVENT_TYPE="issues"
            DESCRIPTION="${{ github.event.issue.body }}"
            SUMMARY="${{ github.event.issue.title }}"
          elif [ "${GITHUB_EVENT_NAME}" = "issue_comment" ]; then
            EVENT_TYPE="issue_comment"
            COMMENT="${{ github.event.comment.body }}"
            ISSUE_NUMBER="${{ github.event.issue.number }}"
          else
            echo "Unsupported event type: $GITHUB_EVENT_NAME"
            exit 1
          fi
          echo "EVENT_TYPE=$EVENT_TYPE" >> $GITHUB_ENV
          echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_ENV
          echo "SUMMARY=$SUMMARY" >> $GITHUB_ENV
          echo "COMMENT=$COMMENT" >> $GITHUB_ENV
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Debug Event Data
        run: |
          echo "Event Type: $EVENT_TYPE"
          echo "Description: $DESCRIPTION"
          echo "Summary: $SUMMARY"
          echo "Comment: $COMMENT"
          echo "Issue Number: $ISSUE_NUMBER"

      - name: Create Jira Ticket for GitHub Actions
        if: ${{ env.EVENT_TYPE == 'pull_request' || env.EVENT_TYPE == 'issues' }}
        env:
          JIRA_URL: ${{ vars.JIRA_URL }}
          JIRA_USERNAME: ${{ vars.JIRA_USERNAME }}
          JIRA_API_TOKEN: ${{ vars.JIRA_API_TOKEN }}
          JIRA_PROJECT_KEY: ${{ vars.JIRA_PROJECT_KEY }}
          EVENT_TYPE: ${{ env.EVENT_TYPE }}
          SUMMARY: ${{ env.SUMMARY }}
          DESCRIPTION: ${{ env.DESCRIPTION }}
        run: |
          curl -X POST \
            -u "$JIRA_USERNAME:$JIRA_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "fields": {
                "project": { "key": "'"$JIRA_PROJECT_KEY"'" },
                "summary": "'"$SUMMARY"'",
                "description": "'"$DESCRIPTION"'",
                "issuetype": { "name": "Task" }
              }
            }' \
            "$JIRA_URL/rest/api/3/issue/"

      - name: Sync Comments with Jira
        if: ${{ env.EVENT_TYPE == 'issue_comment' }}
        env:
          JIRA_URL: ${{ vars.JIRA_URL }}
          JIRA_USERNAME: ${{ vars.JIRA_USERNAME }}
          JIRA_API_TOKEN: ${{ vars.JIRA_API_TOKEN }}
          COMMENT: ${{ env.COMMENT }}
          ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}
        run: |
          JIRA_ISSUE_KEY=$(curl -s -u "$JIRA_USERNAME:$JIRA_API_TOKEN" "$JIRA_URL/rest/api/3/search?jql=description~\"GitHub Issue $ISSUE_NUMBER\"" | jq -r '.issues[0].key')
          if [ -z "$JIRA_ISSUE_KEY" ]; then
            echo "Jira issue not found for GitHub issue $ISSUE_NUMBER"
            exit 1
          fi
          curl -X POST \
            -u "$JIRA_USERNAME:$JIRA_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "body": {
                "type": "doc",
                "version": 1,
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "'"$COMMENT"'"
                      }
                    ]
                  }
                ]
              }
            }' \
            "$JIRA_URL/rest/api/3/issue/$JIRA_ISSUE_KEY/comment"
   
      - name: Send mail
        if: always()
        uses: dawidd6/action-send-mail@v2
        with:
      # mail server settings
          server_address: smtp.gmail.com
          server_port: 465
    # user credentials
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
    # email subject
          subject: New issue is raised for ${{ github.repository }} for job ${{ github.job }} and pipeline is ${{ job.status }}
    # email body as text
          body: ${{ github.job }} job in worflow ${{ github.workflow }} for ${{ github.repository }} has created new jira
    # comma-separated string, send email to
          to: ramyashree.saliyan@ipinfusion.com,vishal.doni@ipinfusion.com
    # from email name
          from: vishal.doni@ipinfusion.com
          

